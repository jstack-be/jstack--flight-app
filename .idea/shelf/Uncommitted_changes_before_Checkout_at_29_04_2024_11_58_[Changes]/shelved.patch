Index: frontend/app/ui/home/create-prompt-form.tsx
===================================================================
diff --git a/frontend/app/ui/home/create-prompt-form.tsx b/frontend/app/ui/home/create-prompt-form.tsx
deleted file mode 100644
--- a/frontend/app/ui/home/create-prompt-form.tsx	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
+++ /dev/null	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
@@ -1,41 +0,0 @@
-"use client";
-
-import {useFormState, useFormStatus} from "react-dom";
-
-
-
-export default function AddForm() {
-    // const [state, FormAction] = useFormState(FormSubmit, "");
-
-    const FormAction = async (formdata : FormData) => {
-        "use server";
-
-        const message = formdata.get("message");
-
-    }
-    return (
-        <>
-            <form action={FormAction}>
-                <div className="text-md text-green-500">
-                </div>
-                <label htmlFor="message">Enter Task</label>
-                <textarea id="message" name="message" placeholder={"type here your description"} required/>
-                <SubmitButton/>
-                {/* voor screenreader*/}
-                {/*<p aria-live="polite" hidden className="sr-only" role="status">*/}
-                {/*    {state?.message}*/}
-                {/*</p>*/}
-            </form>
-        </>
-    );
-}
-
-function SubmitButton() {
-    const {pending} = useFormStatus();
-
-    return (
-        <button type="submit" aria-disabled={pending}>
-            Add
-        </button>
-    );
-}
\ No newline at end of file
Index: frontend/app/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Image from \"next/image\";\r\nimport AddForm from \"@/app/ui/home/addForm\";\r\n\r\nexport default function Home() {\r\n\r\n    const logo = require(\"@/public/ToucanLogo.png\");\r\n    return (\r\n        <main>\r\n            <div className={\"flex justify-center\"}>\r\n                <Image src={logo} alt={\"afbeelding van toucan logo\"} className={\"lg:object-scale-down h-72 w72 md:\"}/>\r\n            </div>\r\n            <AddForm/>\r\n        </main>\r\n    );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/app/page.tsx b/frontend/app/page.tsx
--- a/frontend/app/page.tsx	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
+++ b/frontend/app/page.tsx	(date 1714048125029)
@@ -1,15 +1,28 @@
 import Image from "next/image";
 import AddForm from "@/app/ui/home/addForm";
+import {Suspense} from "react";
 
 export default function Home() {
 
     const logo = require("@/public/ToucanLogo.png");
+    const background = require("@/public/background.png");
     return (
         <main>
+            <div style={{
+                zIndex: -1,
+                position: "absolute",
+                width: "100%",
+                height: "100%",
+            }}>
+                <Image src={background} alt={"background image"} layout={"fill"}
+                       objectFit={"cover"}/>
+            </div>
             <div className={"flex justify-center"}>
-                <Image src={logo} alt={"afbeelding van toucan logo"} className={"lg:object-scale-down h-72 w72 md:"}/>
+                <Image src={logo} alt={"afbeelding van toucan logo"} priority={true}
+                       className={"w-auto lg:object-scale-down h-72 w72 "}/>
             </div>
             <AddForm/>
         </main>
-    );
+    )
+        ;
 }
Index: frontend/app/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import type { Metadata } from \"next\";\r\nimport { Inter } from \"next/font/google\";\r\nimport \"./globals.css\";\r\n\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Create Next App\",\r\n  description: \"Generated by create next app\",\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <body className={ inter.className}>{children}</body>\r\n    </html>\r\n  );\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/app/layout.tsx b/frontend/app/layout.tsx
--- a/frontend/app/layout.tsx	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
+++ b/frontend/app/layout.tsx	(date 1714047006374)
@@ -16,7 +16,7 @@
 }>) {
   return (
     <html lang="en">
-      <body className={ inter.className}>{children}</body>
+      <body className={ inter.className }>{children}</body>
     </html>
   );
 }
Index: frontend/app/lib/actions.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use server\";\r\n\r\nimport {revalidatePath} from \"next/cache\";\r\nimport {redirect} from \"next/navigation\";\r\n\r\n\r\nexport const addForm = async (formdata : FormData) => {\r\n    const message = formdata.get(\"message\");\r\n    console.log(message)\r\n    const res = await fetch(\"http://localhost:4000/api/flights\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({messages:[message]}),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    // Check if the response is ok (status in the range 200-299)\r\n    if (!res.ok) {\r\n        throw new Error(\"HTTP error \" + res.status);\r\n    }\r\n\r\n    // Read the body of the response\r\n    const body = await res.json(); // use .text() for plain text\r\n\r\n    console.log(body);\r\n\r\n    revalidatePath('/messages')\r\n    redirect('/dashboard')\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/app/lib/actions.ts b/frontend/app/lib/actions.ts
--- a/frontend/app/lib/actions.ts	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
+++ b/frontend/app/lib/actions.ts	(date 1714384704341)
@@ -7,7 +7,7 @@
 export const addForm = async (formdata : FormData) => {
     const message = formdata.get("message");
     console.log(message)
-    const res = await fetch("http://localhost:4000/api/flights", {
+    const res = await fetch("http://localhost:3000/api/flights", {
         method: 'POST',
         body: JSON.stringify({messages:[message]}),
         headers: {
@@ -15,7 +15,6 @@
         }
     });
 
-    // Check if the response is ok (status in the range 200-299)
     if (!res.ok) {
         throw new Error("HTTP error " + res.status);
     }
Index: frontend/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\r\n\r\n# dependencies\r\n/node_modules\r\n/.pnp\r\n.pnp.js\r\n.yarn/install-state.gz\r\n\r\n# testing\r\n/coverage\r\n\r\n# next.js\r\n/.next/\r\n/out/\r\n\r\n# production\r\n/build\r\n\r\n# misc\r\n.DS_Store\r\n*.pem\r\n\r\n# debug\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n\r\n# local env files\r\n.env*.local\r\n\r\n# vercel\r\n.vercel\r\n\r\n# typescript\r\n*.tsbuildinfo\r\nnext-env.d.ts\r\n\r\n# idea\r\n.idea
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/.gitignore b/frontend/.gitignore
--- a/frontend/.gitignore	(revision 65ddee24d765dd5345e6787b55a907c47072bfab)
+++ b/frontend/.gitignore	(date 1714121476289)
@@ -25,7 +25,7 @@
 yarn-debug.log*
 yarn-error.log*
 
-# local env files
+# local .env files
 .env*.local
 
 # vercel
